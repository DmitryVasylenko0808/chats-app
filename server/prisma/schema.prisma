generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  username    String  @unique
  password    String
  email       String  @unique
  name        String
  description String?
  avatar      String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  chats    Chat[]
  messages Message[]

  @@map("users")
}

model Chat {
  id       Int       @id @default(autoincrement())
  members  User[]
  messages Message[]

  @@map("chats")
}

model Message {
  id       Int      @id @default(autoincrement())
  senderId Int?     @map("sender_id")
  sender   User?    @relation(fields: [senderId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  chatId   Int      @map("chat_id")
  chat     Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  text     String?
  images   String[]

  replyToId      Int?      @map("reply_to_id")
  replyToMessage Message?  @relation("MessageReplies", fields: [replyToId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  replies        Message[] @relation("MessageReplies")

  forwardedMessageId Int?      @map("forwarded_message_id")
  forwardedMessage   Message?  @relation("MessageForwards", fields: [forwardedMessageId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  forwards           Message[] @relation("MessageForwards")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("messages")
}
